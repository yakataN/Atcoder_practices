#include <iostream>
#include <vector>
using namespace std;

using Edge = pair<int, long long>;
using Graph = vector<vector<Edge> >;

long long N;
Graph G;
vector<int> res;

void dfs(int v, int p, int c) {
    res[v] = c;
    for (auto e : G[v]) {
        if (e.first == p) continue;
        if (e.second & 1) {
            dfs(e.first, v, 1 - c);
        }
        else
        {
            dfs(e.first, v, c);
        }
    }
}

// Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    scanf("%lld",&N);
    G.assign(N, vector<Edge>());
    for(int i = 0 ; i < N-1 ; i++){
        int u,v;
        long long w;
        cin >> u >> v >> w;
        --u;
        --v;
        G[u].push_back(Edge(v, w));
        G[v].push_back(Edge(u, w));
    }
    res.assign(N, 0);
    dfs(0, -1, 0);
    for (auto e : res) cout << e << endl;
    return 0;
}
