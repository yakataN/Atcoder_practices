#include<iostream>
#include<string>
#include<algorithm>
#include<vector>
#include<iomanip>
#include<math.h>
#include<complex>
#include<queue>
#include<deque>
#include<stack>
#include<map>
#include<set>
#include<bitset>
#include<functional>
#include<assert.h>
#include<numeric>
using namespace std;
#define REP(i,m,n) for(int i=(int)(m) ; i < (int) (n) ; ++i )
#define rep(i,n) REP(i,0,n)
using ll = long long;
const int inf=1e9+7;
const ll longinf=1LL<<60 ;
const ll mod=1e9+7 ;


const long long MOD = 1000000007;

void solve(long long N, long long M, std::vector<long long> a){
    vector<ll> dp;
    rep(i, N+1) dp.push_back(0);
    vector<bool> broken(N);
    rep(i, N+1) broken.push_back(false);
    rep(i,M) broken[a[i]] = true;
    // rep(i,N+1) cout << dp[i] << endl;

    rep(i,N+1) {
        if(broken[i]) continue;
        if(i == 0) {
            dp[i] = 1;
            continue;
        }
        if (i == 1){
            dp[i] = dp[0];
            continue;
        }
        dp[i] = (dp[i-1] + dp[i-2]) % MOD;
        // dp[i] = dp[i-1] + dp[i-2];
    }
    // cout << "hello" << endl;
    // return dp[N];
    // rep(i,N+1) cout << dp[i] << endl;
    cout << dp[N] << endl;

}

// Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long N;
    scanf("%lld",&N);
    long long M;
    scanf("%lld",&M);
    std::vector<long long> a(M);
    for(int i = 0 ; i < M ; i++){
        scanf("%lld",&a[i]);
        // --a[i];
    }
    solve(N, M, std::move(a));
    // return 0;
}
