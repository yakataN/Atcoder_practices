#include <bits/stdc++.h>
#include <algorithm>
#include <string>
using namespace std;

int fight(long long ai, long long bi, long long aj, long long bj) {
    if ((ai / bj) > (aj / bi)) {
        return 1;
    }
    else if ((ai / bj) == (aj / bi)) {
        return 0;
    }
    else
    {
        return -1;
    }
    
}

void solve(long long N, std::vector<long long> A, std::vector<long long> B){
    // 方針
    // トナメして優勝者と総当たり
    vector<long long> winner;
    for (int i=0; i<N/2+N%2; i++) {
        // [2 * i] to [2 * i + 1]
        if ((2 * i + 1) >= N) {
            winner.push_back(2 * i);
        }
        else
        {
            int tmp_num = fight(A[2 * i], B[2 * i], A[2 * i + 1], B[2 * i + 1]);
            if (tmp_num == 1 ) {
                winner.push_back(2 * i);
            }
            else if (tmp_num == 0) {
                // pass
            }
            else
            {
                winner.push_back(2 * i + 1);
            }
        }
    }
    while (/* condition */)
    {
        /* code */
    }
    
}

// Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long N;
    scanf("%lld",&N);
    std::vector<long long> A(N);
    std::vector<long long> B(N);
    for(int i = 0 ; i < N ; i++){
        scanf("%lld",&A[i]);
        scanf("%lld",&B[i]);
    }
    solve(N, std::move(A), std::move(B));
    return 0;
}
